{"version":3,"file":"ej2-react-inputs.es2015.js","sources":["../src/es6/textbox/textbox.component.js","../src/es6/numerictextbox/numerictextbox.component.js","../src/es6/maskedtextbox/maskedtextbox.component.js","../src/es6/slider/slider.component.js","../src/es6/uploader/files-directive.js","../src/es6/uploader/uploader.component.js","../src/es6/color-picker/colorpicker.component.js","../src/es6/signature/signature.component.js"],"sourcesContent":["import * as React from 'react';\nimport { TextBox } from '@syncfusion/ej2-inputs';\nimport { ComponentBase, applyMixins } from '@syncfusion/ej2-react-base';\n/**\n * Represents the React TextBox Component\n * ```html\n * <TextBox value={value}></TextBox>\n * ```\n */\nexport class TextBoxComponent extends TextBox {\n    constructor(props) {\n        super(props);\n        this.initRenderCalled = false;\n        this.checkInjectedModules = false;\n        this.immediateRender = true;\n        this.portals = [];\n    }\n    render() {\n        if (((this.element && !this.initRenderCalled) || this.refreshing) && !this.isReactForeceUpdate) {\n            super.render();\n            this.initRenderCalled = true;\n        }\n        else {\n            return React.createElement(React.Fragment, null, [].concat(React.createElement(\"input\", this.getDefaultAttributes()), this.portals));\n        }\n    }\n}\napplyMixins(TextBoxComponent, [ComponentBase, React.Component]);\n","import * as React from 'react';\nimport { NumericTextBox } from '@syncfusion/ej2-inputs';\nimport { ComponentBase, applyMixins } from '@syncfusion/ej2-react-base';\n/**\n * Represents the React NumericTextBox Component\n * ```html\n * <NumericTextBox value={value}></NumericTextBox>\n * ```\n */\nexport class NumericTextBoxComponent extends NumericTextBox {\n    constructor(props) {\n        super(props);\n        this.initRenderCalled = false;\n        this.checkInjectedModules = false;\n        this.immediateRender = true;\n        this.portals = [];\n    }\n    render() {\n        if (((this.element && !this.initRenderCalled) || this.refreshing) && !this.isReactForeceUpdate) {\n            super.render();\n            this.initRenderCalled = true;\n        }\n        else {\n            return React.createElement(React.Fragment, null, [].concat(React.createElement(\"input\", this.getDefaultAttributes()), this.portals));\n        }\n    }\n}\napplyMixins(NumericTextBoxComponent, [ComponentBase, React.Component]);\n","import * as React from 'react';\nimport { MaskedTextBox } from '@syncfusion/ej2-inputs';\nimport { ComponentBase, applyMixins } from '@syncfusion/ej2-react-base';\n/**\n * Represents the React MaskedTextBox Component\n * ```html\n * <MaskedTextBox value={value}></MaskedTextBox>\n * ```\n */\nexport class MaskedTextBoxComponent extends MaskedTextBox {\n    constructor(props) {\n        super(props);\n        this.controlAttributes = ['name'];\n        this.initRenderCalled = false;\n        this.checkInjectedModules = false;\n        this.immediateRender = true;\n        this.portals = [];\n    }\n    render() {\n        if (((this.element && !this.initRenderCalled) || this.refreshing) && !this.isReactForeceUpdate) {\n            super.render();\n            this.initRenderCalled = true;\n        }\n        else {\n            return React.createElement(React.Fragment, null, [].concat(React.createElement(\"input\", this.getDefaultAttributes()), this.portals));\n        }\n    }\n}\napplyMixins(MaskedTextBoxComponent, [ComponentBase, React.Component]);\n","import * as React from 'react';\nimport { Slider } from '@syncfusion/ej2-inputs';\nimport { ComponentBase, applyMixins } from '@syncfusion/ej2-react-base';\n/**\n * Represents the React Slider Component\n * ```html\n * <Slider value={value}></Slider>\n * ```\n */\nexport class SliderComponent extends Slider {\n    constructor(props) {\n        super(props);\n        this.controlAttributes = ['name'];\n        this.initRenderCalled = false;\n        this.checkInjectedModules = false;\n        this.immediateRender = true;\n        this.portals = [];\n    }\n    render() {\n        if (((this.element && !this.initRenderCalled) || this.refreshing) && !this.isReactForeceUpdate) {\n            super.render();\n            this.initRenderCalled = true;\n        }\n        else {\n            return React.createElement('div', this.getDefaultAttributes(), [].concat(this.props.children, this.portals));\n        }\n    }\n}\napplyMixins(SliderComponent, [ComponentBase, React.Component]);\n","import { ComplexBase } from '@syncfusion/ej2-react-base';\n/**\n * `FilesDirective` represent a file of the react uploader.\n * It must be contained in a Uploader component(`UploaderComponent`).\n * ```tsx\n * <UploaderComponent multiple={true}>\n *   <FilesDirective>\n *    <FileDirective name='Java' size=23000 type='pdf'><FileDirective>\n *    <FileDirective name='C++' size=30000 type='.docx'><FileDirective>\n *   </FilesDirective>\n * </UploaderComponent>\n * ```\n */\nexport class UploadedFilesDirective extends ComplexBase {\n}\nUploadedFilesDirective.moduleName = 'uploadedFiles';\nexport class FilesDirective extends ComplexBase {\n}\nFilesDirective.propertyName = 'files';\nFilesDirective.moduleName = 'files';\n","import * as React from 'react';\nimport { Uploader } from '@syncfusion/ej2-inputs';\nimport { ComponentBase, applyMixins } from '@syncfusion/ej2-react-base';\n/**\n * Represents the React Uploader Component\n * ```html\n * <UploaderComponent></UploaderComponent>\n * ```\n */\nexport class UploaderComponent extends Uploader {\n    constructor(props) {\n        super(props);\n        this.initRenderCalled = false;\n        this.checkInjectedModules = false;\n        this.directivekeys = { 'files': 'uploadedFiles' };\n        this.immediateRender = false;\n        this.portals = [];\n    }\n    render() {\n        if (((this.element && !this.initRenderCalled) || this.refreshing) && !this.isReactForeceUpdate) {\n            super.render();\n            this.initRenderCalled = true;\n        }\n        else {\n            return React.createElement(React.Fragment, null, [].concat(React.createElement(\"input\", this.getDefaultAttributes()), this.portals));\n        }\n    }\n}\napplyMixins(UploaderComponent, [ComponentBase, React.Component]);\n","import * as React from 'react';\nimport { ColorPicker } from '@syncfusion/ej2-inputs';\nimport { ComponentBase, applyMixins } from '@syncfusion/ej2-react-base';\n/**\n * Represents the React ColorPicker Component\n * ```html\n * <ColorPickerComponent></ColorPickerComponent>\n * ```\n */\nexport class ColorPickerComponent extends ColorPicker {\n    constructor(props) {\n        super(props);\n        this.initRenderCalled = false;\n        this.checkInjectedModules = false;\n        this.immediateRender = true;\n        this.portals = [];\n    }\n    render() {\n        if (((this.element && !this.initRenderCalled) || this.refreshing) && !this.isReactForeceUpdate) {\n            super.render();\n            this.initRenderCalled = true;\n        }\n        else {\n            return React.createElement(React.Fragment, null, [].concat(React.createElement(\"input\", this.getDefaultAttributes()), this.portals));\n        }\n    }\n}\napplyMixins(ColorPickerComponent, [ComponentBase, React.Component]);\n","import * as React from 'react';\nimport { Signature } from '@syncfusion/ej2-inputs';\nimport { ComponentBase, applyMixins } from '@syncfusion/ej2-react-base';\n/**\n * Represents the React Signature Component\n * ```html\n * <SignatureComponent></SignatureComponent>\n * ```\n */\nexport class SignatureComponent extends Signature {\n    constructor(props) {\n        super(props);\n        this.initRenderCalled = false;\n        this.checkInjectedModules = false;\n        this.immediateRender = true;\n        this.portals = [];\n    }\n    render() {\n        if (((this.element && !this.initRenderCalled) || this.refreshing) && !this.isReactForeceUpdate) {\n            super.render();\n            this.initRenderCalled = true;\n        }\n        else {\n            return React.createElement('canvas', this.getDefaultAttributes(), [].concat(this.props.children, this.portals));\n        }\n    }\n}\napplyMixins(SignatureComponent, [ComponentBase, React.Component]);\n"],"names":["React.createElement","React.Fragment","React.Component"],"mappings":"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"}